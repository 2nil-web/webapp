
#include <iostream>
#include <gtk/gtk.h>


bool dont_close=true;
gboolean on_delete_main(GtkWidget *widget, GdkEvent *event, gpointer data)
{
  std::cout << "On delete, ";

  if (dont_close) {
    std::cout << "first ask for close, do nothing." << std::endl;
    dont_close=false;
  } else {
    std::cout << "second ask for close, will close and destroy widget." << std::endl;
    gtk_widget_hide(widget);
    gtk_widget_destroy(widget);
    gtk_main_quit();
  }

  return TRUE;
}

gboolean on_destroy_main(GtkWidget *widget)
{
  std::cout << "On destroy." << std::endl;
  if (!dont_close) gtk_main_quit();
  return TRUE;
}


int main(int argc, char **argv)
{
  gtk_init(&argc, &argv);
  GtkWidget *window1 = gtk_window_new(GTK_WINDOW_TOPLEVEL);
  g_signal_connect(G_OBJECT(window1), "delete-event", G_CALLBACK(on_delete_main), nullptr);
//  g_signal_connect(G_OBJECT(window1), "destroy", G_CALLBACK(on_destroy_main), nullptr);
  gtk_widget_show_all(window1);
  gtk_main();
  return 0;
}

